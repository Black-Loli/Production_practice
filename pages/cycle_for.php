<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Цикл For</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="../src/css/style.css"/>
</head>
<body>

<?php include 'menu.php'; ?>

<h1>Цикл For</h1>

<div class="text">
    <p> Часто цикл for называют циклом со счетчиком. Этот цикл используется, когда число повторений не связано с тем,
        что происходит в теле цикла. Т.е. количество повторений может быть вычислено заранее (хотя оно не
        вычисляется). </p>
    <p> В заголовке цикла указываются два значения. Первое значение присваивается так называемой переменной-счетчику, от
        этого значения начинается отсчет количества итераций (повторений). Отсчет идет всегда с шагом равным единице.
        Второе значение указывает, при каком значении счетчика цикл должен остановиться. Другими словами, количество
        итераций цикла определяется разностью между вторым и первым значением плюс единица. В Pascal тело цикла не
        должно содержать выражений, изменяющих счетчик. </p>
    <p> Цикл for существует в двух формах: </p>

    <div class="code">
        <p><b>for</b> счетчик:=значение <b>to</b> конечное_значение <b>do</b></p>
        <p class="indent"> тело_цикла; </p>
    </div>

    <div class="code">
        <p><b>for</b> счетчик:=значение <b>downto</b> конечное_значение <b>do</b></p>
        <p class="indent"> тело_цикла; </p>
    </div>

    <p><i>Счетчик</i> – это переменная любого из перечисляемых типов (целого, булевого, символьного, диапазонного,
        перечисления). Начальные и конечные значения могут быть представлены не только значениями, но и выражениями,
        возвращающими совместимые с типом счетчика типы данных. Если между начальным и конечным выражением указано
        служебное слово <b>to</b>, то на каждом шаге цикла значение параметра будет увеличиваться на единицу. Если же указано
        <b>downto</b>, то значение параметра будет уменьшаться на единицу.</p>
    <p>Количество итераций цикла <b>for</b> известно именно до его выполнения, но не до выполнения всей программы. Так в
        примере ниже, количество выполнений цикла определяется пользователем. Значение присваивается переменной, а затем
        используется в заголовке цикла. Но когда оно используется, циклу уже точно известно, сколько раз надо
        выполниться.</p>

    <div class="code">
        <p><b> var </b></p>
        <p class="indent"> i, n: <b>integer</b>;</p>
        <p class="indent_top"><b>begin</b></p>
        <p class="indent"> write (<span class="color_text">'Количество знаков: '</span>);</p>
        <p class="indent">readln (n);</p>
        <p class="indent indent_top"><b>for</b> i := 1 <b>to</b> n <b>do</b></p>
        <p class="indent_more">write (<span class="color_text">'(*) '</span>);</p>
        <p class="indent_top">readln</p>
        <p><b>end.</b></p>

    </div>
</div>
</body>
</html>